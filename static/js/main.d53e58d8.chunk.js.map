{"version":3,"sources":["logo.svg","images/bg.jpg","hero.js","ControlledAccordian.js","tracks.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","props","Grid","container","spacing","direction","alignItems","justify","style","minHeight","textAlign","background","HeroIMG","item","xs","textStyle","fontFamily","fontSize","padding","margin","startDelay","cursorColor","text","typeSpeed","hideCursorAfterText","paddingRight","paddingLeft","date","Date","parse","Button","href","color","backgroundColor","textTransform","borderRadius","Component","withStyles","theme","expansion","backgroundImage","width","classes","React","useState","expanded","setExpanded","handleChange","panel","event","isExpanded","className","root","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","useStyles","makeStyles","table","minWidth","createData","name","description","prize","sponsor","rows","BasicTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","App","Helmet","charSet","link","class","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.d53e58d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/bg.9e52438d.jpg\";","import './App.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport HeroIMG from \"./images/bg.jpg\"\r\nimport React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Countdown from 'react-countdown';\r\nimport TypeWriterEffect from 'react-typewriter-effect';\r\n\r\n\r\n\r\n\r\nclass Hero extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{minHeight: '100vh',\r\n                  textAlign: \"center\",\r\n                  background:\"#C33764\",\r\n                  background: `linear-gradient(rgba(37, 73, 122, 0.8), rgba(230, 203, 73, 0.8)), url(${HeroIMG})`,\r\n                  background: `-webkit-linear-gradient(rgba(37, 73, 122, 0.8), rgba(230, 203, 73, 0.8)), url(${HeroIMG})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundPosition: 'center',\r\n                  fontFamily:\"'Source Code Pro', monospace\",\r\n                  color:\"white\",\r\n                  padding:\"0px\",\r\n                  margin:\"0px\"}}\r\n        >\r\n          <Grid  item xs={12}>\r\n            <TypeWriterEffect\r\n              textStyle={{ fontFamily:\"'Source Code Pro', monospace\", fontSize:\"100px\", padding:\"0px\", margin:\"0px\"}}\r\n              startDelay={100}\r\n              cursorColor=\"black\"\r\n              text=\"HackSmith\"\r\n              typeSpeed={100}\r\n              hideCursorAfterText={true}\r\n            >\r\n\r\n            </TypeWriterEffect>\r\n            <p style={{fontSize:\"75px\", padding:\"0px\", margin:\"0px\"}}>2021</p>\r\n            <p style={{fontSize:\"25px\", padding:\"10px\", margin:\"0px\",\r\n                      fontFamily:\"Arial\",\r\n                      paddingRight:\"50px\",\r\n                      paddingLeft:\"50px\"}}>\r\n            <p style={{fontSize:\"30px\"}}>March 26th-27th</p>\r\n            <p style={{fontSize:\"18px\"}}>\r\n            <Countdown date={Date.parse('26 Mar 2021 11:00:00 EST')} style={{fontSize:\"30px\"}}/> until hacking begins.\r\n            </p>\r\n            </p>\r\n            <Button href=\"#\" color=\"primary\" style={{backgroundColor:\"#2b2b2b\",\r\n                                                                    fontSize:\"18px\",\r\n                                                                    fontFamily:\"Arial\",\r\n                                                                    margin:\"0px\",\r\n                                                                    padding:\"10px\",\r\n                                                                    textTransform: \"none\",\r\n                                                                    color:\"white\",\r\n                                                                    borderRadius:\"50px\",\r\n                                                                    paddingLeft:\"50px\",\r\n                                                                    paddingRight:\"50px\",\r\n                                                                  }}>Registration is Closed</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Hero;\r\n","import Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme, makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  expansion: {\r\n    backgroundImage:\r\n      'url(\"https://media.istockphoto.com/photos/plant-growing-picture-id510222832?k=6&m=510222832&s=612x612&w=0&h=Pzjkj2hf9IZiLAiXcgVE1FbCNFVmKzhdcT98dcHSdSk=\")',\r\n    width: \"50%\"\r\n  }\r\n});\r\n\r\nfunction ControlledAccordion(props){\r\n  const classes = props;\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Accordion expanded={expanded === 'panel0'} onChange={handleChange('panel0')} className = {classes.expansion}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n      <b>What is a hackathon?</b>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n      <div>\r\n        A hackathon is an event where people join teams and work on a programming or otherwise technical project over a short period of time.\r\n        The projects are then judged in different \"tracks\" which are categories that have different prizes.\r\n      </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n      <Accordion expanded={expanded === 'panel1'} onChange={handleChange('panel1')} className = {classes.expansion}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n        <b>Do I need to know how to code to participate in HackSmith?</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          All skill levels and backgrounds are welcome, whether that involves tech, art, history, or anything else.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2bh-content\"\r\n          id=\"panel2bh-header\"\r\n        >\r\n        <b>Is there anything I should do beforehand?</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          Please register using the link in the header and join our Discord server once we send it out. Otherwise, you're all done!\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3bh-content\"\r\n          id=\"panel3bh-header\"\r\n        >\r\n        <b>What will teams be like?</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          People are welcome to work on their own or on teams of up to 4 people. There will also be a team matching activity for people who are interested! There must be no more than one non-undergraduate student per team.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel4'} onChange={handleChange('panel4')} className={classes.expansion}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n        <b>How will HackSmith be run?</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          HackSmith will be run on Discord with live events happening over Zoom. A link to the Discord server will be emailed to people who have registered and put on this website closer to the event. Hacks will be submitted on Devpost.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion expanded={expanded === 'panel6'} onChange={handleChange('panel6')}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4bh-content\"\r\n          id=\"panel4bh-header\"\r\n        >\r\n        <b>Are students from other colleges welcome?</b>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <div>\r\n          Yes! Students from other colleges and universities are more than welcome.\r\n        </div>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nControlledAccordion.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default withStyles(styles)(ControlledAccordion)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, description, prize, sponsor) {\r\n  return { name, description, prize, sponsor };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Most Innovative\", \"This award goes to the most innovative and entrepreneurial hack.\", \"$300 to the team\", \"The Conway Center for Innovation\"),\r\n  createData(\"Best Use of Data\", \"For the best use of data in visualizaton, modeling, or other related tasks\", \"Noise Cancelling Headphones\", \"MassMutual\"),\r\n  createData(\"Best Use of AWS\", \"This award is for the best use of Amazon Web Services in your project\", \"Amazon Echo Show 8\", \"Audible\"),\r\n  createData(\"Best in Design Thinking\", \"For the best display of design thinking principles.\", \"Design and Crafting Kit with TDI Swag\", \"The Design Thinking Initiative\"),\r\n];\r\n\r\nexport default function BasicTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} >\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><b>Name</b></TableCell>\r\n            <TableCell align=\"left\"><b>Description</b></TableCell>\r\n            <TableCell align=\"left\"><b>Prize</b></TableCell>\r\n            <TableCell align=\"left\"><b>Sponsor</b></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.description}</TableCell>\r\n              <TableCell align=\"left\">{row.prize}</TableCell>\r\n              <TableCell align=\"left\">{row.sponsor}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Hero from \"./hero.js\"\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Accordian from \"./ControlledAccordian.js\"\nimport Tracks from \"./tracks.js\";\nimport Link from \"@material-ui/core/Link\";\nimport {Helmet} from \"react-helmet\";\n\n\nfunction App(){\n    return (\n      <div>\n      <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>HackSmith</title>\n      </Helmet>\n\n        <Hero link=\"https://forms.gle/4c4Ywqn6oGmhfHm46\" class=\"heroImg\" />\n        <div class=\"mainArea\">\n          <Grid container spacing={1}>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={10}>\n              <h1>What is HackSmith?</h1>\n              <p>HackSmith is a virtual 24 hour Smith College hackathon run by Smithies in CS, Smithies in SDS, and the SDS Coalition of Color. HackSmith is an opportunity to try out new challenges, attend workshops, and meet new people. We aim to foster a space for interdisciplinary creativity.\n              We've had an unprecedented amount of interest this year and are no longer able to accept new participants.\n              <h1>Our Sponsors</h1>\n              HackSmith wouldn't be possible without the generosity of Audible, the Conway Center for Innovation, The Design Thinking Initiative, and MassMutual.\n              <h2>Design Thinking Initiative Support</h2>\n              If you're interested in checking out physical materials (including Arduino Kits) from the Design Thinking Initiative, please sign up to do so <Link href=\"https://www.librarycat.org/lib/designthinking\" style={{color:\"#e6cb49\"}}>here!</Link> There will be a physical drop-off point for those who are interested.\n\n\n              <h1>Tracks</h1>\n                <Tracks />\n              <h1>Schedule</h1>\n                TBD\n              <h1>FAQ</h1>\n              <br />\n              <Accordian />\n\n              </p>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n      <Route path='/' render={App} />\n    </Router>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}